
/*

    Aqui abaixo, contém funções não documentadas da Microsoft para escrever na tela
    Eu não fiz questão de entender o código, usarei apenas para mostrar a mensagem na tela

*/

/*++
Copyright (c) Microsoft Corporation. All rights reserved.
You may only use this code if you agree to the terms of the Windows Research Kernel Source Code License agreement (see License.txt).
If you do not agree to the terms, do not use the code.
Module Name:
    inbv.h
Abstract:
    This module contains the public header information (function prototypes,
    data and type declarations) for the Initialization Boot Video component.
--*/

#ifndef _INBV_
#define _INBV_

typedef enum _INBV_DISPLAY_STATE
{
    INBV_DISPLAY_STATE_OWNED,     // we own the display
    INBV_DISPLAY_STATE_DISABLED,  // we own but should not use
    INBV_DISPLAY_STATE_LOST       // we lost ownership
} INBV_DISPLAY_STATE;

typedef
BOOLEAN
(*INBV_RESET_DISPLAY_PARAMETERS)(
    ULONG Cols,
    ULONG Rows
    );

typedef
VOID
(*INBV_DISPLAY_STRING_FILTER)(
    PUCHAR* Str
    );

NTKERNELAPI
VOID
InbvNotifyDisplayOwnershipLost(
    INBV_RESET_DISPLAY_PARAMETERS ResetDisplayParameters
);

NTKERNELAPI
VOID
InbvInstallDisplayStringFilter(
    INBV_DISPLAY_STRING_FILTER DisplayStringFilter
);

NTKERNELAPI
VOID
InbvAcquireDisplayOwnership(
    VOID
);

BOOLEAN
InbvDriverInitialize(
    IN PVOID LoaderBlock,
    IN ULONG Count
);

NTKERNELAPI
BOOLEAN
InbvResetDisplay(
);

VOID
InbvBitBlt(
    PUCHAR Buffer,
    ULONG x,
    ULONG y
);

NTKERNELAPI
VOID
InbvSolidColorFill(
    ULONG x1,
    ULONG y1,
    ULONG x2,
    ULONG y2,
    ULONG color
);

NTKERNELAPI
BOOLEAN
InbvDisplayString(
    PUCHAR Str
);

VOID
InbvUpdateProgressBar(
    ULONG Percentage
);

VOID
InbvSetProgressBarSubset(
    ULONG   Floor,
    ULONG   Ceiling
);

VOID
InbvSetBootDriverBehavior(
    PVOID LoaderBlock
);

VOID
InbvIndicateProgress(
    VOID
);

VOID
InbvSetProgressBarCoordinates(
    ULONG x,
    ULONG y
);

NTKERNELAPI
VOID
InbvEnableBootDriver(
    BOOLEAN bEnable
);

NTKERNELAPI
BOOLEAN
InbvEnableDisplayString(
    BOOLEAN bEnable
);

NTKERNELAPI
BOOLEAN
InbvIsBootDriverInstalled(
    VOID
);

PUCHAR
InbvGetResourceAddress(
    IN ULONG ResourceNumber
);

VOID
InbvBufferToScreenBlt(
    PUCHAR Buffer,
    ULONG x,
    ULONG y,
    ULONG width,
    ULONG height,
    ULONG lDelta
);

VOID
InbvScreenToBufferBlt(
    PUCHAR Buffer,
    ULONG x,
    ULONG y,
    ULONG width,
    ULONG height,
    ULONG lDelta
);

BOOLEAN
InbvTestLock(
    VOID
);

VOID
InbvAcquireLock(
    VOID
);

VOID
InbvReleaseLock(
    VOID
);

NTKERNELAPI
BOOLEAN
InbvCheckDisplayOwnership(
    VOID
);

NTKERNELAPI
VOID
InbvSetScrollRegion(
    ULONG x1,
    ULONG y1,
    ULONG x2,
    ULONG y2
);

NTKERNELAPI
ULONG
InbvSetTextColor(
    ULONG Color
);

#endif

///
/// Todas as cores
///
#define VGA_COLOR_BLACK                      0
#define VGA_COLOR_RED                        1
#define VGA_COLOR_GREEN                      2
#define VGA_COLOR_GR                         3
#define VGA_COLOR_BULE                       4
#define VGA_COLOR_DARK_MEGAENTA              5
#define VGA_COLOR_TURQUOISE                  6
#define VGA_COLOR_GRAY                       7
#define VGA_COLOR_BRIGHT_GRAY                8
#define VGA_COLOR_BRIGHT_RED                 9
#define VGA_COLOR_BRIGHT_GREEN               10
#define VGA_COLOR_BRIGHT_YELLOW              11
#define VGA_COLOR_BRIGHT_BULE                12
#define VGA_COLOR_BRIGHT_PURPLE              13
#define VGA_COLOR_BRIGHT_TURQUOISE           14
#define VGA_COLOR_WHITE                      15

/// <summary>
/// Mostra uma de boot na tela
/// </summary>
/// <param name="Message"></param>
VOID ShowMessageOnScreen(_In_ PCHAR Message)
{
    // UNICODE
    UNICODE_STRING us;

    // Inicie o UNICODE
    RtlInitUnicodeString(&us, Message);

    // Mostre uma mensagem na tela
    ZwDisplayString(&us);
}
