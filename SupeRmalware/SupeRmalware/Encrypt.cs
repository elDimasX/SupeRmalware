
/*

    Todas as funções foram obtidas do meu projeto antigo
    Link para ele: https://github.com/elDimasX/0xCryptography/blob/main/0xCryptography/cryptography.cs

*/

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;

namespace InicialExe
{
    class Encrypt
    {
        /// <summary>
        /// Senha para descriptografas os arquivos
        /// </summary>
        public static string passwordFiles = "dimas123";

        /// <summary>
        /// Descriptografa um arquivo
        /// </summary>
        public static void DecryptFile(string inputFile, string outputFile)
        {
            // Novo UnicodeEncoding
            UnicodeEncoding UE = new UnicodeEncoding();

            // Obtenha os bytes do password
            byte[] key = UE.GetBytes(passwordFiles);

            // Abra o arquivo inputFile
            FileStream outputCrypt = new FileStream(
                // Arquivo
                inputFile,

                // Abra
                FileMode.Open
            );

            // Novo Crypto
            RijndaelManaged Rijndael = new RijndaelManaged();

            // Novo CryptoStream, usado pra criar a descriptografia
            CryptoStream cs = new CryptoStream(
                // O FileStream, que usamos pra abrir o arquivo
                outputCrypt,

                // Crie a descriptografia
                Rijndael.CreateDecryptor(key, key),

                // Leitura
                CryptoStreamMode.Read
            );

            // Novo FileStream
            FileStream stream = new FileStream(
                // Arquivo descriptografado
                outputFile,

                // Crie ele
                FileMode.Create
            );

            // Data
            int data;

            // Leita todos os bytes do CryptoStream
            while ((data = cs.ReadByte()) != -1)
            {
                // Escreva os bytes no arquivo descriptografado
                stream.WriteByte((byte)data);
            }

            // Feche o arquivo descriptografado
            stream.Close();

            // Feche o CryptoStream
            cs.Close();

            // Feche o arquivo criptografado
            outputCrypt.Close();
        }

        /// <summary>
        /// Função de descriptografia
        /// </summary>
        public static string DecryptString(string text, string password)
        {
            // Altere o texto antes de continuar
            text = text.Replace(" ", "+");

            // Base64String
            byte[] Bytes = Convert.FromBase64String(text);

            // Criptografia AES
            Aes encryptor = Aes.Create();

            // Bytes necessário para usar em Rfc2898DeriveBytes
            byte[] bytesToDevice = new byte[] { 0x49, 0x76, 0x61, 0x6e, 0x20, 0x4d, 0x65, 0x64, 0x76, 0x65, 0x64, 0x65, 0x76 };

            // Rfc2898DeriveBytes, que pega a senha pra criptografia e os bytes
            Rfc2898DeriveBytes deriveBytes = new Rfc2898DeriveBytes(password, bytesToDevice);

            // Configure o encryptor
            encryptor.Key = deriveBytes.GetBytes(32);
            encryptor.IV = deriveBytes.GetBytes(16);

            // Novo MemoryStream
            MemoryStream memoryStream = new MemoryStream();

            // Crie uma descriptografia
            CryptoStream cryptoStream = new CryptoStream(
                memoryStream, encryptor.CreateDecryptor(), CryptoStreamMode.Write
            );

            // Escreva em Bytes
            cryptoStream.Write(Bytes, 0, Bytes.Length);
            cryptoStream.Close();

            // Retorne o texto descriptografado
            return Encoding.Unicode.GetString(memoryStream.ToArray());
        }

    }

}
